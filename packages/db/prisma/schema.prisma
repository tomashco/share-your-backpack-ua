generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Author {
  authorId     String  @id @unique @default(cuid())
  
  packs        Pack[]
  item         Item[]
  
  unit         String? @default("g")
  isSubscribed Boolean @default(false)
}

model Pack {
  packId       String     @id @unique @default(cuid())

  author       Author[]
  packItems    PackItem[]
  
  createdAt    DateTime   @default(now())
  name         String     @db.VarChar(255)
  description  String?    @db.Text
  activityType String?    @db.VarChar(255)
  isPublic     Boolean    @default(false)

  @@fulltext([name, description])
}

model Item {
  itemId String @id @unique @default(cuid())

  author   Author     @relation(fields: [itemAuthorId], references: [authorId])
  packItem PackItem[]

  name         String
  createdAt    DateTime @default(now())
  model        String?
  brand        String?
  imageUrl     String?
  itemUrl      String?
  weight       Int? // weight in grams, can be converted reviewing author specific scale
  itemAuthorId String
  isDuplicate  Boolean  @default(false) // when item is added to the pack, it can be marked as duplicate, to check every time item is created or edited
  // when searching for items, hide duplicates!

  @@index([itemAuthorId])
  @@fulltext([name, brand])
}

model PackItem {
  packItemId String @id @unique @default(cuid())

  item Item  @relation(fields: [packItemItemId], references: [itemId])
  pack Pack  @relation(fields: [packItemPackId], references: [packId])
  tag  Tag[]

  createdAt      DateTime @default(now())
  quantity       Int      @default(1)
  category       String?
  location       String?
  packItemPackId String
  packItemItemId String

  @@index([packItemPackId])
  @@index([packItemItemId])
}

model Tag {
  tagId     String     @id @unique @default(cuid())
  name      String
  packItems PackItem[]
}
